package com.mycompany.imageprocessor;

import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MainScreen extends javax.swing.JFrame {

    private Processor processor;
    
    public MainScreen() {
        initComponents();
        processor = new Processor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        openFileButton = new javax.swing.JButton();
        algorithmComboBox = new javax.swing.JComboBox<>();
        applyButton = new javax.swing.JButton();
        rowsTextField = new javax.swing.JTextField();
        outputNameTextField = new javax.swing.JTextField();
        bitLevelComboBox = new javax.swing.JComboBox<>();
        colsTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        originalLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        transformedLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        openFileButton.setText("Open File");
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        algorithmComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Downscale", "Zoom (Nearest Neighbor)", "Zoom (LinearX)", "Zoom (LinearY)", "Zoom (Bilinear)", "Reduce Graylevel" }));

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        rowsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rowsTextField.setToolTipText("Desired Rows");
        rowsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowsTextFieldActionPerformed(evt);
            }
        });

        outputNameTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        outputNameTextField.setToolTipText("Specify File output name");
        outputNameTextField.setFocusable(false);
        outputNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputNameTextFieldActionPerformed(evt);
            }
        });

        bitLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        bitLevelComboBox.setToolTipText("grayscale bit levels");

        colsTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        colsTextField.setToolTipText("Desired Columns");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(openFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bitLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputNameTextField)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openFileButton)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyButton)
                    .addComponent(rowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bitLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        originalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        originalLabel.setText("Original Image");
        originalLabel.setToolTipText("Original Image");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(originalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(originalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        transformedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        transformedLabel.setText("Transformed Image");
        transformedLabel.setToolTipText("Transformed Image");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transformedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transformedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Pressing the OpenFile button brings up the JFileChooser OpenDialog.
     * The User chooses an image file to be displayed on the left side.
     */
    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        FileFilter filter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        
        if (result == JFileChooser.APPROVE_OPTION) {
            BufferedImage image = null;
            try {
                image = ImageIO.read(new File(fileChooser.getSelectedFile().getAbsolutePath()));
            } catch (Exception e) {
                System.err.println(e + " failed to load image.");
            }
            originalLabel.setIcon(new ImageIcon(image));
            originalLabel.setText("");
            String fileName = fileChooser.getSelectedFile().getName();
            outputNameTextField.setText("out_"+fileName);
            String path = fileChooser.getSelectedFile().getAbsolutePath().replaceAll(fileName, "out_"+fileName);
            processor.setOutputName("out_" + fileName, path);
            processor.loadImageGrayscale(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        String algorithm = algorithmComboBox.getSelectedItem().toString();

        switch(algorithm) {
            case "Downscale":
                try {
                    Integer desiredRow = new Integer(rowsTextField.getText());
                    Integer desiredCol = new Integer(colsTextField.getText());
                    processor.downscale(desiredRow, desiredCol);
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }
                break;
            case "Zoom (Nearest Neighbor)":
                try {
                    Integer desiredRow = new Integer(rowsTextField.getText());
                    Integer desiredCol = new Integer(colsTextField.getText());
                    processor.zoomNearestNeighbor(desiredRow, desiredCol);
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }
                break;
            case "Zoom (LinearX)":
                try {
                    Integer desiredRow = new Integer(rowsTextField.getText());
                    Integer desiredCol = new Integer(colsTextField.getText());
                    processor.zoomLinearX(desiredRow, desiredCol);
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }
                break;
            case "Zoom (LinearY)":
                try {
                    Integer desiredRow = new Integer(rowsTextField.getText());
                    Integer desiredCol = new Integer(colsTextField.getText());
                    processor.zoomLinearY(desiredRow, desiredCol);
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }
                break;
            case "Zoom (Bilinear)":
                try {
                    Integer desiredRow = new Integer(rowsTextField.getText());
                    Integer desiredCol = new Integer(colsTextField.getText());
                    processor.zoomBilinear(desiredRow, desiredCol);
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }                
                break;
            case "Reduce Graylevel":
                try {
                    Integer grayLevel = new Integer(bitLevelComboBox.getSelectedItem().toString());
                    processor.reduceGraylevel(grayLevel.intValue());
                    processor.saveImage();
                    BufferedImage bf = ImageIO.read(new File(processor.getOutputFilePath()));
                    transformedLabel.setIcon(new ImageIcon(bf));
                    transformedLabel.setText("");
                } catch (Exception e) {
                    System.err.println(e + " was found");
                }
                break;
            default: System.out.println("Please pick something correctly");
                break;
        }
        
    }//GEN-LAST:event_applyButtonActionPerformed

    private void outputNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputNameTextFieldActionPerformed
        //Rename the output file.
        //processor.setOutputName(outputNameTextField.getText());
    }//GEN-LAST:event_outputNameTextFieldActionPerformed

    private void rowsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowsTextFieldActionPerformed
        
    }//GEN-LAST:event_rowsTextFieldActionPerformed

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algorithmComboBox;
    private javax.swing.JButton applyButton;
    private javax.swing.JComboBox<String> bitLevelComboBox;
    private javax.swing.JTextField colsTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton openFileButton;
    private javax.swing.JLabel originalLabel;
    private javax.swing.JTextField outputNameTextField;
    private javax.swing.JTextField rowsTextField;
    private javax.swing.JLabel transformedLabel;
    // End of variables declaration//GEN-END:variables
}
